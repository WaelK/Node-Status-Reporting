public class Notification implements Comparable<Notification>{

    /**
     * notifReceived: the timestamp when the notification was received local to the notification system
     * notifGenerated: the timstamp when the notification was generated loacal to the node
     * sender: the name of the node sending he message
     * messageType: the type of notification (eg HELLO, FOUND, LOST)
     * subject: who the message is about (Not applicable to HELLO)
     */
    private long notifReceived;
    private long notifGenerated;
    private String sender;
    private NotificationType messageType;
    private String subject;

    /**
     * Notification Constructor
     * @param notifReceived
     * @param notifGenerated
     * @param sender
     * @param messageType
     */
    public Notification(long notifReceived, long notifGenerated, String sender, NotificationType messageType) {
        this.notifReceived = notifReceived;
        this.notifGenerated = notifGenerated;
        this.sender = sender;
        this.messageType = messageType;
    }

    /**
     * Assigns a name of the node the notification is targeted at
     * @param subject
     */
    public void setSubject(String subject) {
        this.subject = subject;
    }

    /**
     * Gets the name of the node the notification is targeted at
     * @return subject
     */
    public String getSubject() {
        return subject;
    }

    /**
     * Gets the type of notification
     * @return messageType
     */
    public NotificationType getMessageType() {
        return messageType;
    }

    /**
     * Gets the name of the Node sending the message
     * @return sender
     */
    public String getSender() {
        return sender;
    }

    /**
     * Gets the timestamp the message was received
     * @return notifReceived
     */
    public long getNotifReceived() {
        return notifReceived;
    }

    /**
     * Gets the timestamp the message was generated by the node
     * @return
     */
    public long getNotifGenerated() {
        return notifGenerated;
    }

    /**
     * Used to sort the list of nodes by the time the notification was generated
     */
    @Override
    public int compareTo(Notification o) {

        long thisTime = this.getNotifGenerated();
        long paramTime = 0;
        if(o instanceof Notification) {
            paramTime = ((Notification) o).getNotifGenerated();
        }
        if(paramTime > thisTime) return -1;
        else if (paramTime == thisTime) return 0;
        else return 1;
    }

    /**
     * Makes a string containing all the information needed for the notifcation
     * @return the notifications information
     */
    @Override
    public String toString() {
        String str = notifReceived + "  " + notifGenerated + "  " + sender + "  " + messageType;

        if(!messageType.equals("HELLO")) {
            str = str + "  " + subject;
        }

        return str;
    }
}
